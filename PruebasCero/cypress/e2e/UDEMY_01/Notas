Tener node.js instalado. Comprobar con cmd: node --version
Crear carpeta donde se documentaran las pruebas.
npm init                               //para crear el proyecto, el package.json
npm install --save-dev cypress         //instalando cypress.
  --revisar las conexion a intenert. Revisar los antivirus.
  --probar instalar npx. (npm install -g npx)
  --probar npm install cypress --force
node_modules\.bin\cypress open
npx cypress open 
dentro de la carpeta cypress creamos las carpetas y los archivos donde vamos a crear las pruebas.
los archivos deben de ser .js
para parar la consola con ctrl+c
En el framework se pueden delcarar cada prueba (spec) directamente. 
Te crea la carpeta e2e, donde se guardan las que creas en framework o las q puedes crear directas en el IDE.
Los archivos que se crean directamente por el IDE en la carpeta e2e debe seguir el siguiente formato:
  -- nombre.cy.js  // porque un archivo solo js, no sera mostrado entonces en la UI de Cypress.
instalar plugin de cypress para el tab. revisar la funcion TAB  (VER VIDEO)

//Siempre para que no de Error_Reto1
        Cypress.on('uncaught:exception', (err, runnable) => {
          return false;
         }); 
cy.get(selector).eq(0).clik();    //eq(valor#) para seleccionar el elemento de una lista. los valores # se trabajan como indices de los arrays.
npx cypress run           //ejecuto las pruebas a nivel de consola
npx cypress run --headed  //ejecuto las pruebas desde consola pero q se visalicen en el navegador.
npx cypress run --spec 'cypress\e2e\UDEMY_01\sec13MasAssert.cy.js'      //ejecuto las pruebas a nivel de consola especificando el spec deseado
npx cypress run --spec 'cypress\e2e\UDEMY_01\""'      //ejecuto las pruebas a nivel de consola especificando el los spec dentro de una carpeta y q se ejecuten todos.
npm install --save-dev cypress-file-upload    //para instalar plugin para seleccionar(subir) archivo en un test